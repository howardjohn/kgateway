Clusters:
- commonLbConfig:
    consistentHashingLbConfig:
      useHostnameForHashing: true
  connectTimeout: 5s
  dnsLookupFamily: V4_PREFERRED
  lbPolicy: RING_HASH
  loadAssignment:
    clusterName: backend_default_example-backend_0
    endpoints:
    - lbEndpoints:
      - endpoint:
          address:
            socketAddress:
              address: example.com
              portValue: 8080
          healthCheckConfig:
            hostname: example.com
          hostname: example.com
  metadata: {}
  name: backend_default_example-backend_0
  ringHashLbConfig:
    maximumRingSize: "2048"
    minimumRingSize: "1024"
  type: STRICT_DNS
- commonLbConfig: {}
  connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  lbPolicy: RING_HASH
  metadata: {}
  name: kube_default_httpbin_8080
  ringHashLbConfig:
    maximumRingSize: "2048"
    minimumRingSize: "1024"
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  name: listener~8080
Routes:
- ignorePortInHostMatching: true
  name: listener~8080
